Given a 32-bit signed integer, reverse digits of an integer.
Example 1:
Input: 123
Output:  321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only hold integers within the 32-bit signed integer range. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.

(1)转换成字符串 反序处理
(2)数字处理 需要注意的是, 如果数据溢出 则返回0
当数据溢出的时候 新结果不再等于原先结果.
class Solution {
    public int reverse(int x) {
        int result = 0;
        while(x != 0) {
            int tail = x % 10;
            int newResult = result * 10 + tail;
            if((newResult - tail) / 10 != result) {
                return 0;
            }
            result = tail + result * 10;
            x = x / 10;
        }

        return result;
    }
}

